{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Messages.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","src","photo","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","key","messagesElements","messages","m","NavbarContainer","dialogItem","values","addMessage","newMessageBody","compose","connect","state","withAuthRedirect"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,WAAa,8B,oBCAlED,EAAOC,QAAU,CAAC,QAAU,4B,+FCcbC,EAXI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAEC,QACd,yBAAKC,IAAKN,EAAMO,QAChB,kBAAC,IAAD,CAASC,GAAIP,GAAOD,EAAMS,Q,kBCGvBC,EATC,SAACV,GACb,OACI,yBAAKG,UAAWC,IAAEO,SACTX,EAAMW,U,yCCGjBC,EAAcC,YAAiB,IAe/BC,EAAsBC,YAAU,CAClCC,KAAM,yBADkBD,EAbL,SAACf,GACpB,OACI,0BAAMiB,SAAUjB,EAAMkB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAK,iBAAiBa,YAAY,qBAC1DC,SAAU,CAACC,IAAUZ,MAE7B,6BACI,6CAsCDa,EA7BC,SAACzB,GACb,IAAI0B,EACA1B,EAAM2B,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMsB,IAAKD,EAAE5B,GAAIA,GAAI4B,EAAE5B,GAAIK,MAAOuB,EAAEvB,WAC3FyB,EACAhC,EAAM2B,YAAYM,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAEhC,GAAIA,GAAIgC,EAAEhC,QAMtF,OACI,oCACI,kBAACiC,EAAA,EAAD,MACA,yBAAKhC,UAAWC,IAAEwB,SAEd,yBAAKzB,UAAWC,IAAEgC,YACbV,GAEL,yBAAKvB,UAAWC,IAAE6B,UACd,6BACKD,IAGT,kBAAClB,EAAD,CAAqBG,SAjBb,SAACoB,GACjBrC,EAAMsC,WAAWD,EAAOE,sB,wBCtBjBC,sBACXC,aAPkB,SAACC,GACnB,MAAO,CACHf,YAAae,EAAMf,eAKE,CAAEW,iBAC3BK,IAFWH,CAGbf","file":"static/js/4.7f6e3535.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__12Muv\",\"dialogItem\":\"Dialogs_dialogItem__3ynBY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Messages_message__1QAxb\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img src={props.photo} />\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Messages.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message} >\r\n                {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utilities/validators';\r\nimport { Textarea } from '../Common/FormsControls/FormsControls';\r\nimport NavbarContainer from '../Navbar/NavbarContainer';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst addMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newMessageBody\" placeholder='Enter your message'\r\n                    validate={[required, maxLength50]} />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageReduxForm = reduxForm({\r\n    form: \"DialogsAddMessageForm\"\r\n})(addMessageForm)\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements =\r\n        props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} photo={d.photo} />);\r\n    let messagesElements =\r\n        props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id} id={m.id} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <NavbarContainer />\r\n            <div className={s.dialogs}>\r\n\r\n                <div className={s.dialogItem}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    <div>\r\n                        {messagesElements}\r\n                    </div>\r\n                </div>\r\n                <AddMessageReduxForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { addMessage } from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { addMessage }),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n// const DialogsContainer = () => {\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             { (store) => {\r\n//                 let state = store.getState();\r\n//                 let addMessage = () => {\r\n//                     store.dispatch(addMessageActionCreator());\r\n//                 };\r\n//                 let onMessageChange = (text) => {\r\n//                     store.dispatch(updateNewMessageTextActionCreator(text))\r\n//                 };\r\n//                 return <Dialogs state={state} addMessage={addMessage}\r\n//                                 updateNewMessageText={onMessageChange}/>\r\n//             }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     );\r\n// }\r\n"],"sourceRoot":""}