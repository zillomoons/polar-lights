{"version":3,"sources":["components/Profile/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","description","src","photos","large","fullName","aboutMe","contacts","vk","Post","posts","message","likescount","maxLength10","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","MyPosts","React","memo","console","log","postsElements","profilePage","map","p","likesCount","key","id","myposts","values","addPost","newPostText","MyPostsContainer","connect","state","Profile","content","store","ProfileContainer","userId","this","match","params","authorizedId","setProfile","getStatus","Component","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.2bb256aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__2cqRf\",\"profile_image\":\"ProfileInfo_profile_image__3g3en\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myposts\":\"MyPosts_myposts__2b6t6\",\"item\":\"MyPosts_item__hxv_e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Post_posts__3srWY\"};","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = (e) => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"No Status\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport Preloader from '../Common/Preloader/preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.description}>\r\n                <img src={profile.photos.large} />\r\n                <ProfileStatusWithHooks status={status}\r\n                    updateStatus={updateStatus} />\r\n                <p>Name: {profile.fullName}</p>\r\n                <p>About Me: {profile.aboutMe}</p>\r\n                <p>VK: {profile.contacts.vk}</p>\r\n                ava+description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n            <div>\r\n                <div className={s.posts}>\r\n                    <img src='https://i.mycdn.me/image?id=838968512981&ts=00000000190000012c&plc=WEB&tkn=*HgeUJJ9phxm9HWqJX7D7VF1zf5Y&fn=sqr_288' />\r\n                    {props.message}\r\n                    </div>\r\n                <span>like</span> {props.likescount}\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utilities/validators';\r\nimport { Textarea } from '../../Common/FormsControls/FormsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea}\r\n                validate={[required, maxLength10]}\r\n                placeholder=\"Add post\" />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({\r\n    form: \"ProfileAddNewPostForm\"\r\n})(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    console.log('My Posts');\r\n\r\n    let postsElements =\r\n        props.profilePage.posts.map(p => <Post message={p.message} likescount={p.likesCount} key={p.id} />)\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.myposts}>\r\n            <h3>My Posts</h3>\r\n            <AddNewPostReduxForm onSubmit={addPost} />\r\n            {postsElements}\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport { addPost } from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPost })(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus} />\r\n            <MyPostsContainer store={props.store} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport { connect } from 'react-redux';\r\nimport { setProfile, getStatus, updateStatus } from '../../redux/profileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedId;\r\n        }\r\n        this.props.setProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    render() {\r\n        return <Profile {...this.props}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { setProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}