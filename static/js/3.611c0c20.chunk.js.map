{"version":3,"sources":["components/Profile/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileStatusWithHooks.jsx","components/Profile/ProfileDataForm.jsx","components/Profile/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","profileStatus","onDoubleClick","isOwner","customStatusInput","for","id","type","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataReduxForm","reduxForm","form","initialValues","handleSubmit","error","onSubmit","style","loginError","createField","Input","Textarea","Object","keys","contacts","map","key","ProfileData","profile","onEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","description","src","photos","large","userPhoto","profilePhoto","htmlFor","customFileUpload","target","files","length","formData","then","Post","posts","message","likescount","maxLength10","maxLengthCreator","AddNewPostReduxForm","Field","name","component","validate","required","placeholder","MyPosts","React","memo","postsElements","profilePage","p","likesCount","myposts","values","addPost","newPostText","MyPostsContainer","connect","state","Profile","NavbarContainer","store","ProfileContainer","userId","this","match","params","authorizedId","setProfile","getStatus","refreshProfile","prevProps","prevState","Component","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.611c0c20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileInfo_description__2cqRf\",\"profilePhoto\":\"ProfileInfo_profilePhoto__2zBtK\",\"profileStatus\":\"ProfileInfo_profileStatus__2W9_s\",\"customFileUpload\":\"ProfileInfo_customFileUpload__3JkOV\",\"contacts\":\"ProfileInfo_contacts__1DW7A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myposts\":\"MyPosts_myposts__2b6t6\",\"item\":\"MyPosts_item__hxv_e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Post_posts__3srWY\"};","import React, { useEffect, useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        if (props.isOwner) {\r\n            setEditMode(true)\r\n        }\r\n    }\r\n    const deactivateEditMode = (e) => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status: </b><span className={s.profileStatus} onDoubleClick={activateEditMode}>{props.status || \"No Status\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <label className={s.customStatusInput} for={'statusInput'}></label>\r\n                    <input id={'statusInput'} type={'text'} onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { createField, Input, Textarea } from '../Common/FormsControls/FormsControls';\r\nimport s from './ProfileInfo.module.css';\r\nimport style from '../Common/FormsControls/FormsControls.module.css'\r\n\r\nconst ProfileDataForm = ({ initialValues, handleSubmit, error }) => {\r\n    return <form onSubmit={handleSubmit} >\r\n        <div><button>Save</button></div>\r\n        {error && <div className={style.loginError}>{error}</div>}\r\n        <div>\r\n            <b>Name:</b> {createField('Enter your name', 'fullName', [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job: </b> {createField('', 'lookingForAJob', [], Input, { type: 'checkbox' })}\r\n        </div>\r\n        <div>\r\n            <b>Skills: </b> {createField('Enter your skills', 'lookingForAJobDescription', [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>About me: </b> {createField('Tell us about yourself', 'aboutMe', [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts: </b> {Object.keys(initialValues.contacts).map(key => {\r\n                return <div key={key} className={s.contacts}>\r\n                    <b>{key}:</b> {createField(key, 'contacts.' + key, [], Input)}\r\n                </div>\r\n            }\r\n            )}\r\n        </div>\r\n    </form>\r\n}\r\nconst ProfileDataReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm;","import React, { useState } from 'react';\r\nimport Preloader from '../Common/Preloader/preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport ProfileDataReduxForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    const onProfilePhotoChanged = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        }\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.description}>\r\n                <img src={profile.photos.large || userPhoto} className={s.profilePhoto} />\r\n                <div>{isOwner && <label htmlFor={'file-upload'} className={s.customFileUpload}>\r\n                    Choose File\r\n                    <input id={'file-upload'} type={'file'} onChange={onProfilePhotoChanged} />\r\n                </label>}\r\n                </div>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} isOwner={isOwner} />\r\n                {editMode\r\n                    ? <ProfileDataReduxForm initialValues={profile} onSubmit={onSubmit} />\r\n                    : <ProfileData profile={profile} isOwner={isOwner} onEditMode={() => { setEditMode(true) }} />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, onEditMode }) => {\r\n    return <div>\r\n        {isOwner && <div><button onClick={onEditMode}>Edit</button></div>}\r\n        <div><b>Name:</b> {profile.fullName}</div>\r\n        <div><b>Looking for a job: </b> {profile.lookingForAJob ? 'yes' : 'no'}</div>\r\n        <div> {profile.lookingForAJob && <div><b>Professional skills: </b> {profile.lookingForAJobDescription}</div>} </div>\r\n        <div> <b>About me: </b> {profile.aboutMe}</div>\r\n        <div>\r\n            <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n            }\r\n            )}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className={s.contacts}>\r\n        <b>{contactTitle}:</b> {contactValue}\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n            <div>\r\n                <div className={s.posts}>\r\n                    <img src='https://i.mycdn.me/image?id=838968512981&ts=00000000190000012c&plc=WEB&tkn=*HgeUJJ9phxm9HWqJX7D7VF1zf5Y&fn=sqr_288' />\r\n                    {props.message}\r\n                    </div>\r\n                <span>like</span> {props.likescount}\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utilities/validators';\r\nimport { Textarea } from '../../Common/FormsControls/FormsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea}\r\n                validate={[required, maxLength10]}\r\n                placeholder=\"Add post\" />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({\r\n    form: \"ProfileAddNewPostForm\"\r\n})(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postsElements =\r\n        props.profilePage.posts.map(p => <Post message={p.message} likescount={p.likesCount} key={p.id} />)\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.myposts}>\r\n            <h3>My Posts</h3>\r\n            <AddNewPostReduxForm onSubmit={addPost} />\r\n            {postsElements}\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport { addPost } from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPost })(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport NavbarContainer from '../Navbar/NavbarContainer'\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <>\r\n            <NavbarContainer />\r\n            <ProfileInfo profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                isOwner={props.isOwner}\r\n                savePhoto={props.savePhoto}\r\n                saveProfile={props.saveProfile} />\r\n            <MyPostsContainer store={props.store} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport { connect } from 'react-redux';\r\nimport { setProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/profileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedId;\r\n        }\r\n        this.props.setProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n    render() {\r\n        return <Profile {...this.props}\r\n            isOwner={!this.props.match.params.userId}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n            savePhoto={this.props.savePhoto}\r\n            saveProfile={this.props.saveProfile} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { setProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}