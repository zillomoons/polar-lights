{"version":3,"sources":["components/Common/FormsControls/FormsControls.js","components/Common/FormsControls/FormsControls.module.css","utilities/validators.js","components/Profile/HeroProfile/HeroProfile.module.css","components/Profile/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Sidebar/sidebar.module.css","components/Profile/Profile.module.css","components/Profile/ProfileDataForm.jsx","components/Profile/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Sidebar/index.jsx","components/Sidebar/SidebarContainer.jsx","components/Profile/ProfileStatusWithHooks.jsx","components/Profile/HeroProfile/HeroProfile.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["FormControl","input","meta","props","hasError","touched","error","className","styles","children","Textarea","restProps","child","module","exports","required","value","maxLengthCreator","maxLength","length","initialValues","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","website","instagram","twitter","vk","youtube","github","mainLink","ProfileDataFormik","profile","onSubmit","enableReinitialize","validationSchema","Yup","max","values","s","profileForm","label","name","type","Object","keys","map","key","style","loginError","ProfileData","SocialMedia","socialMedia","href","target","ProfileInfo","isOwner","saveProfile","useState","editMode","setEditMode","title","editBtn","onClick","formData","then","onEditMode","Post","posts","src","message","likescount","maxLength10","AddNewPostReduxForm","reduxForm","form","handleSubmit","Field","component","validate","placeholder","MyPosts","React","memo","postsElements","profilePage","p","likesCount","id","myposts","addPost","newPostText","MyPostsContainer","connect","state","Friends","path","friendsPhoto","photo","alt","to","Sidebar","friendsElements","dialogsPage","dialogs","d","SidebarContainer","ProfileStatusWithHooks","status","setStatus","useEffect","profileStatus","statusEditBtn","customStatusInput","for","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileIntro","savePhoto","profileIntro","profileCol1","photos","large","userPhoto","profilePhoto","htmlFor","customFileUpload","files","profileCol2","HeroProfile","Profile","NavbarContainer","mainSection","store","ProfileContainer","userId","this","match","params","authorizedId","setProfile","getStatus","refreshProfile","prevProps","prevState","Component","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/4.8d13b5cb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport styles from './FormsControls.module.css'\r\n\r\nconst FormControl = ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={hasError ? styles.error : ''}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            { hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props} ><input {...input} {...restProps} /></FormControl>\r\n}\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => {\r\n    return <div>\r\n        <Field placeholder={placeholder} name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props} /> {text}\r\n    </div>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControls_error__3VyXk\",\"loginError\":\"FormsControls_loginError__2qVlW\"};","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"This field is requiered\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileIntro\":\"HeroProfile_profileIntro___cvlu\",\"profileCol1\":\"HeroProfile_profileCol1__oa9DB\",\"profileCol2\":\"HeroProfile_profileCol2__3CtHb\",\"statusEditBtn\":\"HeroProfile_statusEditBtn__1z-p8\",\"customStatusInput\":\"HeroProfile_customStatusInput__2ByQw\",\"profilePhoto\":\"HeroProfile_profilePhoto__E8fds\",\"customFileUpload\":\"HeroProfile_customFileUpload__1zOD9\",\"title\":\"HeroProfile_title__9VOk4\",\"editBtn\":\"HeroProfile_editBtn__DnaCe\",\"aboutMe\":\"HeroProfile_aboutMe__19RPl\",\"socialMedia\":\"HeroProfile_socialMedia__2WLIf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileForm\":\"ProfileInfo_profileForm__ZZSqs\",\"customFileUpload\":\"ProfileInfo_customFileUpload__3JkOV\",\"contacts\":\"ProfileInfo_contacts__1DW7A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myposts\":\"MyPosts_myposts__2b6t6\",\"item\":\"MyPosts_item__hxv_e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Post_posts__3srWY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsPhoto\":\"sidebar_friendsPhoto__mMfzn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainSection\":\"Profile_mainSection__169gh\"};","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { createField, Input, Textarea } from '../Common/FormsControls/FormsControls';\r\nimport s from './ProfileInfo.module.css';\r\nimport style from '../Common/FormsControls/FormsControls.module.css'\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { MyCheckbox, MyTextInput } from '../Common/FormsControls/MyForms';\r\n\r\n\r\n// const ProfileDataForm = ({ initialValues, handleSubmit, error }) => {\r\n\r\n//     return (\r\n//         <>\r\n\r\n//             <form onSubmit={handleSubmit} >\r\n\r\n//                 <div>\r\n//                     <b>Name:</b> {createField('Enter your name', 'fullName', [], Input)}\r\n//                 </div>\r\n//                 <div>\r\n//                     <b>About me: </b> {createField('Tell us about yourself', 'aboutMe', [], Textarea)}\r\n//                 </div>\r\n//                 <div>\r\n//                     <b>Looking for a job: </b> {createField('', 'lookingForAJob', [], Input, { type: 'checkbox' })}\r\n//                 </div>\r\n//                 <div>\r\n//                     <b>Professional skills: </b> {createField('Enter your skills', 'lookingForAJobDescription', [], Textarea)}\r\n//                 </div>\r\n\r\n//                 <div>\r\n//                     <b>Social links: </b> {Object.keys(initialValues.contacts).map(key => {\r\n//                         return <div key={key} className={s.contacts}>\r\n//                             <b>{key}:</b> {createField(key, 'contacts.' + key, [], Input)}\r\n//                         </div>\r\n//                     }\r\n//                     )}\r\n//                 </div>\r\n//                 <div><button>Save</button></div>\r\n//                 {error && <div className={style.loginError}>{error}</div>}\r\n//             </form>\r\n//         </>\r\n//     )\r\n// }\r\n// export const ProfileDataReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm)\r\n\r\nconst initialValues = {\r\n    fullName: '',\r\n    aboutMe: '',\r\n    lookingForAJob: false,\r\n    lookingForAJobDescription: '',\r\n    contacts: {\r\n        facebook: '',\r\n        website: '',\r\n        instagram: '',\r\n        twitter: '',\r\n        vk: '',\r\n        youtube: '',\r\n        github: '',\r\n        mainLink: ''\r\n    }\r\n}\r\n\r\nexport const ProfileDataFormik = ({ profile, onSubmit, error }) => {\r\n    return (\r\n        <Formik\r\n            initialValues={profile ? profile : initialValues}\r\n            enableReinitialize\r\n            validationSchema={Yup.object({\r\n                fullName: Yup.string()\r\n                    .max(15, 'Must be 15 characters or less')\r\n                    .required('Required'),\r\n                aboutMe: Yup.string()\r\n                    .max(50, 'Must be 50 characters or less')\r\n                    .required('Required'),\r\n                lookingForAJobDescription: Yup.string()\r\n                    .max(50, 'Must be 50 characters or less')\r\n                    .required('Required')\r\n            })}\r\n            onSubmit={(values) => { onSubmit(values) }}\r\n        >\r\n            <Form className={s.profileForm}>\r\n                <MyTextInput\r\n                    label='Name'\r\n                    name='fullName'\r\n                    type='text'\r\n                />\r\n                <MyTextInput\r\n                    label='About me'\r\n                    name='aboutMe'\r\n                    type='text'\r\n                />\r\n                <MyCheckbox name='lookingForAJob'>\r\n                    Looking for a job\r\n                </MyCheckbox>\r\n                <MyTextInput\r\n                    label='Professional Skills'\r\n                    name='lookingForAJobDescription'\r\n                    type='text'\r\n                />\r\n\r\n                Social links: {Object.keys(initialValues.contacts).map(key => {\r\n                    return (\r\n                        <div key={key}>\r\n                            {key}<Field name={`contacts[${key}]`} type='text' />\r\n                        </div>\r\n                    )\r\n                })}\r\n\r\n                <button type='submit'>Submit</button>\r\n                {error && <div className={style.loginError}>{error}</div>}\r\n            </Form>\r\n\r\n        </Formik>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport s from './HeroProfile/HeroProfile.module.css'\r\nimport { ProfileDataReduxForm } from './ProfileDataForm';\r\nimport { ProfileDataFormik } from './ProfileDataForm';\r\nimport { FaGithub, FaFacebookF, FaTwitter, FaYoutube } from 'react-icons/fa'\r\nimport { MdEdit } from 'react-icons/md'\r\n\r\n\r\n\r\nconst ProfileInfo = ({ profile, isOwner, saveProfile }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    const onEditMode = () => setEditMode(true);\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={s.aboutMe}>\r\n            <div className={s.title}>\r\n                Profile Info\r\n                {isOwner && <button className={s.editBtn} onClick={onEditMode}><MdEdit /></button>}\r\n            </div>\r\n            {editMode\r\n                // ? <ProfileDataReduxForm initialValues={profile} isOwner={isOwner} onSubmit={onSubmit} />\r\n                ? <ProfileDataFormik profile={profile} onSubmit={onSubmit} />\r\n                : <ProfileData profile={profile} isOwner={isOwner} onEditMode={() => { setEditMode(true) }} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const ProfileData = ({ profile }) => {\r\n\r\n    return <>\r\n        <div>\r\n            <h4>About me</h4>\r\n            {profile.aboutMe}\r\n        </div>\r\n        <div><b>Looking for a job: </b> {profile.lookingForAJob ? 'yes' : 'no'}</div>\r\n        <div>\r\n            <h4>Professional skills </h4>\r\n            {profile.lookingForAJobDescription}\r\n        </div>\r\n        <SocialMedia profile={profile} />\r\n    </>\r\n}\r\n\r\nconst SocialMedia = ({ profile }) => {\r\n\r\n    return (\r\n        <div className={s.socialMedia}>\r\n            <a href={profile.contacts.github\r\n                ? profile.contacts.github : '#'} target='_blank'><FaGithub /></a>\r\n            <a href={profile.contacts.facebook\r\n                ? profile.contacts.facebook : '#'} target='_blank'><FaFacebookF /></a>\r\n            <a href={profile.contacts.twitter\r\n                ? profile.contacts.twitter : '#'} target='_blank'><FaTwitter /></a>\r\n            <a href={profile.contacts.youtube\r\n                ? profile.contacts.youtube : '#'} target='_blank'><FaYoutube /></a>\r\n\r\n        </div>\r\n    )\r\n}\r\n// const Contact = ({ contactTitle, contactValue }) => {\r\n//     return <div className={s.contacts}>\r\n//         <b>{contactTitle}:</b> {contactValue}\r\n//     </div>\r\n// }\r\n/* <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\r\n               return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n           }\r\n           )} */\r\n\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n            <div>\r\n                <div className={s.posts}>\r\n                    <img src='https://i.mycdn.me/image?id=838968512981&ts=00000000190000012c&plc=WEB&tkn=*HgeUJJ9phxm9HWqJX7D7VF1zf5Y&fn=sqr_288' />\r\n                    {props.message}\r\n                    </div>\r\n                <span>like</span> {props.likescount}\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utilities/validators';\r\nimport { Textarea } from '../../Common/FormsControls/FormsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea}\r\n                validate={[required, maxLength10]}\r\n                placeholder=\"Add post\" />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({\r\n    form: \"ProfileAddNewPostForm\"\r\n})(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postsElements =\r\n        props.profilePage.posts.map(p => <Post message={p.message} likescount={p.likesCount} key={p.id} />)\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.myposts}>\r\n            <h3>My Posts</h3>\r\n            <AddNewPostReduxForm onSubmit={addPost} />\r\n            {postsElements}\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport { addPost } from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, { addPost })(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './sidebar.module.css'\r\n\r\nconst Sidebar = (props) => {\r\n    let friendsElements =\r\n        props.dialogsPage.dialogs.map(d => <Friends name={d.name} key={d.id} id={d.id} photo={d.photo} />);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>Friends</h3>\r\n            {friendsElements}\r\n        </>\r\n    )\r\n}\r\n\r\nconst Friends = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div>\r\n            <img className={s.friendsPhoto} src={props.photo} alt={'ava'} />\r\n            <div>\r\n                <NavLink to={path}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Sidebar\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Sidebar from '.';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n        // sidebarPage: state.sidebar\r\n    }\r\n}\r\n\r\nconst SidebarContainer = connect(mapStateToProps)(Sidebar);\r\n\r\nexport default SidebarContainer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport s from './HeroProfile/HeroProfile.module.css'\r\nimport { MdEdit } from 'react-icons/md'\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        if (props.isOwner) {\r\n            setEditMode(true)\r\n        }\r\n    }\r\n    const deactivateEditMode = (e) => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div className={s.profileStatus} >\r\n                    <span >{props.status || \"No Status\"}</span>\r\n                    <button className={s.statusEditBtn} onClick={activateEditMode}><MdEdit /></button>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div className={s.customStatusInput}>\r\n                    <label for={'statusInput'}></label>\r\n                    <input id={'statusInput'} type={'text'} onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react'\r\nimport s from './HeroProfile.module.css'\r\nimport ProfileInfo from '../ProfileInfo'\r\nimport userPhoto from '../../../assets/images/user.png'\r\nimport ProfileStatusWithHooks from '../ProfileStatusWithHooks'\r\nimport { MdAddAPhoto } from 'react-icons/md'\r\nimport Banner from '../../Common/banner'\r\n\r\n\r\n\r\nconst HeroProfile = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n    return (\r\n        <>\r\n            <Banner />\r\n            <ProfileIntro\r\n                profile={profile}\r\n                status={status}\r\n                updateStatus={updateStatus}\r\n                isOwner={isOwner}\r\n                savePhoto={savePhoto} />\r\n        </>\r\n    )\r\n}\r\n\r\nconst ProfileIntro = ({ profile, status, updateStatus, isOwner, savePhoto }) => {\r\n\r\n    const onProfilePhotoChanged = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section className={s.profileIntro}>\r\n            <div className={s.profileCol1}>\r\n                <img src={profile.photos.large || userPhoto} className={s.profilePhoto} />\r\n                {isOwner &&\r\n                    <label htmlFor={'file-upload'} className={s.customFileUpload}>\r\n                        <MdAddAPhoto />\r\n                        <input id={'file-upload'} type={'file'} onChange={onProfilePhotoChanged} />\r\n                    </label>}\r\n                <h2>{profile.fullName}</h2>\r\n            </div>\r\n            <div className={s.profileCol2}>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} isOwner={isOwner} />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default HeroProfile\r\n\r\n","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport NavbarContainer from '../Navbar/NavbarContainer'\r\nimport SidebarContainer from '../Sidebar/SidebarContainer';\r\nimport HeroProfile from './HeroProfile/HeroProfile'\r\nimport Preloader from '../Common/Preloader/preloader'\r\nimport s from './Profile.module.css'\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <>\r\n            <NavbarContainer />\r\n            <HeroProfile profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                isOwner={props.isOwner}\r\n                savePhoto={props.savePhoto}\r\n                saveProfile={props.saveProfile} />\r\n            <div className={s.mainSection}>\r\n                <ProfileInfo profile={props.profile}\r\n                    status={props.status}\r\n                    updateStatus={props.updateStatus}\r\n                    isOwner={props.isOwner}\r\n                    savePhoto={props.savePhoto}\r\n                    saveProfile={props.saveProfile} />\r\n                <MyPostsContainer store={props.store} />\r\n                <SidebarContainer />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport { connect } from 'react-redux';\r\nimport { setProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/profileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/AuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedId;\r\n        }\r\n        this.props.setProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n    render() {\r\n        return <Profile {...this.props}\r\n            isOwner={!this.props.match.params.userId}\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updateStatus={this.props.updateStatus}\r\n            savePhoto={this.props.savePhoto}\r\n            saveProfile={this.props.saveProfile} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { setProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}